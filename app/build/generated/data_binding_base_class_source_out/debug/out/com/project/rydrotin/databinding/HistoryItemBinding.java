// Generated by view binder compiler. Do not edit!
package com.project.rydrotin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.project.rydrotin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HistoryItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView count;

  @NonNull
  public final TextView date;

  @NonNull
  public final ImageButton delete;

  @NonNull
  public final TextView habitName;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView msgTxt;

  private HistoryItemBinding(@NonNull CardView rootView, @NonNull TextView count,
      @NonNull TextView date, @NonNull ImageButton delete, @NonNull TextView habitName,
      @NonNull ImageView imageView, @NonNull TextView msgTxt) {
    this.rootView = rootView;
    this.count = count;
    this.date = date;
    this.delete = delete;
    this.habitName = habitName;
    this.imageView = imageView;
    this.msgTxt = msgTxt;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static HistoryItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HistoryItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.history_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HistoryItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.count;
      TextView count = ViewBindings.findChildViewById(rootView, id);
      if (count == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.delete;
      ImageButton delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.habit_name;
      TextView habitName = ViewBindings.findChildViewById(rootView, id);
      if (habitName == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.msg_txt;
      TextView msgTxt = ViewBindings.findChildViewById(rootView, id);
      if (msgTxt == null) {
        break missingId;
      }

      return new HistoryItemBinding((CardView) rootView, count, date, delete, habitName, imageView,
          msgTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
