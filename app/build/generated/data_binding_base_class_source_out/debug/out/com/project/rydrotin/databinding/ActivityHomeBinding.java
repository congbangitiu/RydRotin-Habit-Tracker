// Generated by view binder compiler. Do not edit!
package com.project.rydrotin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.BarChart;
import com.github.mikephil.charting.charts.HorizontalBarChart;
import com.github.mikephil.charting.charts.LineChart;
import com.project.rydrotin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView allTimeHistory;

  @NonNull
  public final LinearLayout allTimeUpper;

  @NonNull
  public final ConstraintLayout allTimeWrapper;

  @NonNull
  public final Button analyzeBtn;

  @NonNull
  public final BarChart barChart;

  @NonNull
  public final ConstraintLayout cardsContainer;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final TextView habits;

  @NonNull
  public final CardView habitsCard;

  @NonNull
  public final TextView habitsCount;

  @NonNull
  public final TextView history;

  @NonNull
  public final CardView historyCard;

  @NonNull
  public final ConstraintLayout historyContainer;

  @NonNull
  public final TextView historyCount;

  @NonNull
  public final HorizontalBarChart horizontalBarChart;

  @NonNull
  public final TextView monthHistory;

  @NonNull
  public final LinearLayout monthUpper;

  @NonNull
  public final ConstraintLayout monthWrapper;

  @NonNull
  public final BarChart monthsBarChart;

  @NonNull
  public final ImageView monthsCalendarBtn;

  @NonNull
  public final TextView mood;

  @NonNull
  public final ImageView moodCalendarBtn;

  @NonNull
  public final CardView moodCard;

  @NonNull
  public final TextView moodHistory;

  @NonNull
  public final LineChart moodLineChart;

  @NonNull
  public final TextView moodQuote;

  @NonNull
  public final LinearLayout moodUpper;

  @NonNull
  public final ConstraintLayout moodWrapper;

  @NonNull
  public final TextView textUsername;

  @NonNull
  public final TextView weekHistory;

  @NonNull
  public final LinearLayout weekUpper;

  @NonNull
  public final ConstraintLayout weekWrapper;

  @NonNull
  public final ImageView weeksCalendarBtn;

  private ActivityHomeBinding(@NonNull ScrollView rootView, @NonNull TextView allTimeHistory,
      @NonNull LinearLayout allTimeUpper, @NonNull ConstraintLayout allTimeWrapper,
      @NonNull Button analyzeBtn, @NonNull BarChart barChart,
      @NonNull ConstraintLayout cardsContainer, @NonNull ConstraintLayout container,
      @NonNull TextView habits, @NonNull CardView habitsCard, @NonNull TextView habitsCount,
      @NonNull TextView history, @NonNull CardView historyCard,
      @NonNull ConstraintLayout historyContainer, @NonNull TextView historyCount,
      @NonNull HorizontalBarChart horizontalBarChart, @NonNull TextView monthHistory,
      @NonNull LinearLayout monthUpper, @NonNull ConstraintLayout monthWrapper,
      @NonNull BarChart monthsBarChart, @NonNull ImageView monthsCalendarBtn,
      @NonNull TextView mood, @NonNull ImageView moodCalendarBtn, @NonNull CardView moodCard,
      @NonNull TextView moodHistory, @NonNull LineChart moodLineChart, @NonNull TextView moodQuote,
      @NonNull LinearLayout moodUpper, @NonNull ConstraintLayout moodWrapper,
      @NonNull TextView textUsername, @NonNull TextView weekHistory,
      @NonNull LinearLayout weekUpper, @NonNull ConstraintLayout weekWrapper,
      @NonNull ImageView weeksCalendarBtn) {
    this.rootView = rootView;
    this.allTimeHistory = allTimeHistory;
    this.allTimeUpper = allTimeUpper;
    this.allTimeWrapper = allTimeWrapper;
    this.analyzeBtn = analyzeBtn;
    this.barChart = barChart;
    this.cardsContainer = cardsContainer;
    this.container = container;
    this.habits = habits;
    this.habitsCard = habitsCard;
    this.habitsCount = habitsCount;
    this.history = history;
    this.historyCard = historyCard;
    this.historyContainer = historyContainer;
    this.historyCount = historyCount;
    this.horizontalBarChart = horizontalBarChart;
    this.monthHistory = monthHistory;
    this.monthUpper = monthUpper;
    this.monthWrapper = monthWrapper;
    this.monthsBarChart = monthsBarChart;
    this.monthsCalendarBtn = monthsCalendarBtn;
    this.mood = mood;
    this.moodCalendarBtn = moodCalendarBtn;
    this.moodCard = moodCard;
    this.moodHistory = moodHistory;
    this.moodLineChart = moodLineChart;
    this.moodQuote = moodQuote;
    this.moodUpper = moodUpper;
    this.moodWrapper = moodWrapper;
    this.textUsername = textUsername;
    this.weekHistory = weekHistory;
    this.weekUpper = weekUpper;
    this.weekWrapper = weekWrapper;
    this.weeksCalendarBtn = weeksCalendarBtn;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.all_time_history;
      TextView allTimeHistory = ViewBindings.findChildViewById(rootView, id);
      if (allTimeHistory == null) {
        break missingId;
      }

      id = R.id.all_time_upper;
      LinearLayout allTimeUpper = ViewBindings.findChildViewById(rootView, id);
      if (allTimeUpper == null) {
        break missingId;
      }

      id = R.id.all_time_wrapper;
      ConstraintLayout allTimeWrapper = ViewBindings.findChildViewById(rootView, id);
      if (allTimeWrapper == null) {
        break missingId;
      }

      id = R.id.analyze_btn;
      Button analyzeBtn = ViewBindings.findChildViewById(rootView, id);
      if (analyzeBtn == null) {
        break missingId;
      }

      id = R.id.barChart;
      BarChart barChart = ViewBindings.findChildViewById(rootView, id);
      if (barChart == null) {
        break missingId;
      }

      id = R.id.cards_container;
      ConstraintLayout cardsContainer = ViewBindings.findChildViewById(rootView, id);
      if (cardsContainer == null) {
        break missingId;
      }

      id = R.id.container;
      ConstraintLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.habits;
      TextView habits = ViewBindings.findChildViewById(rootView, id);
      if (habits == null) {
        break missingId;
      }

      id = R.id.habits_card;
      CardView habitsCard = ViewBindings.findChildViewById(rootView, id);
      if (habitsCard == null) {
        break missingId;
      }

      id = R.id.habits_count;
      TextView habitsCount = ViewBindings.findChildViewById(rootView, id);
      if (habitsCount == null) {
        break missingId;
      }

      id = R.id.history;
      TextView history = ViewBindings.findChildViewById(rootView, id);
      if (history == null) {
        break missingId;
      }

      id = R.id.history_card;
      CardView historyCard = ViewBindings.findChildViewById(rootView, id);
      if (historyCard == null) {
        break missingId;
      }

      id = R.id.history_container;
      ConstraintLayout historyContainer = ViewBindings.findChildViewById(rootView, id);
      if (historyContainer == null) {
        break missingId;
      }

      id = R.id.history_count;
      TextView historyCount = ViewBindings.findChildViewById(rootView, id);
      if (historyCount == null) {
        break missingId;
      }

      id = R.id.horizontal_bar_chart;
      HorizontalBarChart horizontalBarChart = ViewBindings.findChildViewById(rootView, id);
      if (horizontalBarChart == null) {
        break missingId;
      }

      id = R.id.month_history;
      TextView monthHistory = ViewBindings.findChildViewById(rootView, id);
      if (monthHistory == null) {
        break missingId;
      }

      id = R.id.month_upper;
      LinearLayout monthUpper = ViewBindings.findChildViewById(rootView, id);
      if (monthUpper == null) {
        break missingId;
      }

      id = R.id.month_wrapper;
      ConstraintLayout monthWrapper = ViewBindings.findChildViewById(rootView, id);
      if (monthWrapper == null) {
        break missingId;
      }

      id = R.id.months_barChart;
      BarChart monthsBarChart = ViewBindings.findChildViewById(rootView, id);
      if (monthsBarChart == null) {
        break missingId;
      }

      id = R.id.months_calendar_btn;
      ImageView monthsCalendarBtn = ViewBindings.findChildViewById(rootView, id);
      if (monthsCalendarBtn == null) {
        break missingId;
      }

      id = R.id.mood;
      TextView mood = ViewBindings.findChildViewById(rootView, id);
      if (mood == null) {
        break missingId;
      }

      id = R.id.mood_calendar_btn;
      ImageView moodCalendarBtn = ViewBindings.findChildViewById(rootView, id);
      if (moodCalendarBtn == null) {
        break missingId;
      }

      id = R.id.mood_card;
      CardView moodCard = ViewBindings.findChildViewById(rootView, id);
      if (moodCard == null) {
        break missingId;
      }

      id = R.id.mood_history;
      TextView moodHistory = ViewBindings.findChildViewById(rootView, id);
      if (moodHistory == null) {
        break missingId;
      }

      id = R.id.mood_lineChart;
      LineChart moodLineChart = ViewBindings.findChildViewById(rootView, id);
      if (moodLineChart == null) {
        break missingId;
      }

      id = R.id.mood_quote;
      TextView moodQuote = ViewBindings.findChildViewById(rootView, id);
      if (moodQuote == null) {
        break missingId;
      }

      id = R.id.mood_upper;
      LinearLayout moodUpper = ViewBindings.findChildViewById(rootView, id);
      if (moodUpper == null) {
        break missingId;
      }

      id = R.id.mood_wrapper;
      ConstraintLayout moodWrapper = ViewBindings.findChildViewById(rootView, id);
      if (moodWrapper == null) {
        break missingId;
      }

      id = R.id.textUsername;
      TextView textUsername = ViewBindings.findChildViewById(rootView, id);
      if (textUsername == null) {
        break missingId;
      }

      id = R.id.week_history;
      TextView weekHistory = ViewBindings.findChildViewById(rootView, id);
      if (weekHistory == null) {
        break missingId;
      }

      id = R.id.week_upper;
      LinearLayout weekUpper = ViewBindings.findChildViewById(rootView, id);
      if (weekUpper == null) {
        break missingId;
      }

      id = R.id.week_wrapper;
      ConstraintLayout weekWrapper = ViewBindings.findChildViewById(rootView, id);
      if (weekWrapper == null) {
        break missingId;
      }

      id = R.id.weeks_calendar_btn;
      ImageView weeksCalendarBtn = ViewBindings.findChildViewById(rootView, id);
      if (weeksCalendarBtn == null) {
        break missingId;
      }

      return new ActivityHomeBinding((ScrollView) rootView, allTimeHistory, allTimeUpper,
          allTimeWrapper, analyzeBtn, barChart, cardsContainer, container, habits, habitsCard,
          habitsCount, history, historyCard, historyContainer, historyCount, horizontalBarChart,
          monthHistory, monthUpper, monthWrapper, monthsBarChart, monthsCalendarBtn, mood,
          moodCalendarBtn, moodCard, moodHistory, moodLineChart, moodQuote, moodUpper, moodWrapper,
          textUsername, weekHistory, weekUpper, weekWrapper, weeksCalendarBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
