// Generated by view binder compiler. Do not edit!
package com.project.rydrotin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.project.rydrotin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HabitItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton addCount;

  @NonNull
  public final ImageButton deleteHabit;

  @NonNull
  public final CardView habitCard;

  @NonNull
  public final TextView habitCount;

  @NonNull
  public final TextView habitName;

  @NonNull
  public final ImageView img;

  @NonNull
  public final ImageButton messageBtn;

  @NonNull
  public final ImageButton showHistory;

  @NonNull
  public final ImageButton updateCount;

  private HabitItemBinding(@NonNull CardView rootView, @NonNull ImageButton addCount,
      @NonNull ImageButton deleteHabit, @NonNull CardView habitCard, @NonNull TextView habitCount,
      @NonNull TextView habitName, @NonNull ImageView img, @NonNull ImageButton messageBtn,
      @NonNull ImageButton showHistory, @NonNull ImageButton updateCount) {
    this.rootView = rootView;
    this.addCount = addCount;
    this.deleteHabit = deleteHabit;
    this.habitCard = habitCard;
    this.habitCount = habitCount;
    this.habitName = habitName;
    this.img = img;
    this.messageBtn = messageBtn;
    this.showHistory = showHistory;
    this.updateCount = updateCount;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static HabitItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HabitItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.habit_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HabitItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_count;
      ImageButton addCount = ViewBindings.findChildViewById(rootView, id);
      if (addCount == null) {
        break missingId;
      }

      id = R.id.delete_habit;
      ImageButton deleteHabit = ViewBindings.findChildViewById(rootView, id);
      if (deleteHabit == null) {
        break missingId;
      }

      CardView habitCard = (CardView) rootView;

      id = R.id.habit_count;
      TextView habitCount = ViewBindings.findChildViewById(rootView, id);
      if (habitCount == null) {
        break missingId;
      }

      id = R.id.habit_name;
      TextView habitName = ViewBindings.findChildViewById(rootView, id);
      if (habitName == null) {
        break missingId;
      }

      id = R.id.img;
      ImageView img = ViewBindings.findChildViewById(rootView, id);
      if (img == null) {
        break missingId;
      }

      id = R.id.message_btn;
      ImageButton messageBtn = ViewBindings.findChildViewById(rootView, id);
      if (messageBtn == null) {
        break missingId;
      }

      id = R.id.show_history;
      ImageButton showHistory = ViewBindings.findChildViewById(rootView, id);
      if (showHistory == null) {
        break missingId;
      }

      id = R.id.update_count;
      ImageButton updateCount = ViewBindings.findChildViewById(rootView, id);
      if (updateCount == null) {
        break missingId;
      }

      return new HabitItemBinding((CardView) rootView, addCount, deleteHabit, habitCard, habitCount,
          habitName, img, messageBtn, showHistory, updateCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
